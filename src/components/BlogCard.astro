---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { cn, fetchCoverImage, formatDate, getTagByName } from "@/lib";

type Props = {
  entry: CollectionEntry<"blog">;
  class?: string;
};

const { entry, class: className } = Astro.props;
const slug = entry.id;
const { title, published } = entry.data;
const tags = entry.data.tags?.map((tag) => getTagByName(tag)) || [];
---
<div
  onclick={`location.href='/blog/entry/${entry.id}'`}
  class={cn(
    "flex flex-col",
    "group relative cursor-pointer block overflow-hidden",
    "bg-white border-black border-1 rounded-xl",
    "hover:transition-colors hover:border-primary",
    // "shadow-sm transition-shadow hover:shadow-md",
    className,
  )}
>
  <Image
    src={`/blog/entry/${slug}.png`}
    alt={title}
    class={cn(
      "rounded-xl object-cover w-full rounded-b-none",
    )}
    width={630}
    height={1200}
    loading="lazy"
  />
  <div class="flex flex-col p-4">
    <p class="text-sm text-gray-600">
      {formatDate(published)}
    </p>
    <div>
      {tags && tags.length > 0 && (
        <div class="flex flex-wrap gap-2 relative z-30">
          {tags.map((tag) => (
            <a
              class={cn(
                "hover:cursor-pointer text-sm font-semibold mt-2 text-gray-600 hover:text-primary"
              )}
              href={tag.link}
            >
              {tag.name}
            </a>
          ))}
        </div>
      )}
    </div>
  </div>
</div>